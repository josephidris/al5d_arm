/* Auto-generated by genmsg_cpp for file /home/joseph/catkin_ws/install/share/mk-ros-pkg/ssc32py/srv/None_Int32.srv */
#ifndef SSC32PY_SERVICE_NONE_INT32_H
#define SSC32PY_SERVICE_NONE_INT32_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace ssc32py
{
template <class ContainerAllocator>
struct None_Int32Request_ {
  typedef None_Int32Request_<ContainerAllocator> Type;

  None_Int32Request_()
  {
  }

  None_Int32Request_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::ssc32py::None_Int32Request_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ssc32py::None_Int32Request_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct None_Int32Request
typedef  ::ssc32py::None_Int32Request_<std::allocator<void> > None_Int32Request;

typedef boost::shared_ptr< ::ssc32py::None_Int32Request> None_Int32RequestPtr;
typedef boost::shared_ptr< ::ssc32py::None_Int32Request const> None_Int32RequestConstPtr;


template <class ContainerAllocator>
struct None_Int32Response_ {
  typedef None_Int32Response_<ContainerAllocator> Type;

  None_Int32Response_()
  : value(0)
  {
  }

  None_Int32Response_(const ContainerAllocator& _alloc)
  : value(0)
  {
  }

  typedef int32_t _value_type;
  int32_t value;


  typedef boost::shared_ptr< ::ssc32py::None_Int32Response_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ssc32py::None_Int32Response_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct None_Int32Response
typedef  ::ssc32py::None_Int32Response_<std::allocator<void> > None_Int32Response;

typedef boost::shared_ptr< ::ssc32py::None_Int32Response> None_Int32ResponsePtr;
typedef boost::shared_ptr< ::ssc32py::None_Int32Response const> None_Int32ResponseConstPtr;

struct None_Int32
{

typedef None_Int32Request Request;
typedef None_Int32Response Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct None_Int32
} // namespace ssc32py

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::ssc32py::None_Int32Request_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::ssc32py::None_Int32Request_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::ssc32py::None_Int32Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::ssc32py::None_Int32Request_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::ssc32py::None_Int32Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ssc32py/None_Int32Request";
  }

  static const char* value(const  ::ssc32py::None_Int32Request_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::ssc32py::None_Int32Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::ssc32py::None_Int32Request_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::ssc32py::None_Int32Request_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::ssc32py::None_Int32Response_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::ssc32py::None_Int32Response_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::ssc32py::None_Int32Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b3087778e93fcd34cc8d65bc54e850d1";
  }

  static const char* value(const  ::ssc32py::None_Int32Response_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xb3087778e93fcd34ULL;
  static const uint64_t static_value2 = 0xcc8d65bc54e850d1ULL;
};

template<class ContainerAllocator>
struct DataType< ::ssc32py::None_Int32Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ssc32py/None_Int32Response";
  }

  static const char* value(const  ::ssc32py::None_Int32Response_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::ssc32py::None_Int32Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 value\n\
\n\
\n\
";
  }

  static const char* value(const  ::ssc32py::None_Int32Response_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::ssc32py::None_Int32Response_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::ssc32py::None_Int32Request_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct None_Int32Request_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::ssc32py::None_Int32Response_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.value);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct None_Int32Response_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<ssc32py::None_Int32> {
  static const char* value() 
  {
    return "b3087778e93fcd34cc8d65bc54e850d1";
  }

  static const char* value(const ssc32py::None_Int32&) { return value(); } 
};

template<>
struct DataType<ssc32py::None_Int32> {
  static const char* value() 
  {
    return "ssc32py/None_Int32";
  }

  static const char* value(const ssc32py::None_Int32&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<ssc32py::None_Int32Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b3087778e93fcd34cc8d65bc54e850d1";
  }

  static const char* value(const ssc32py::None_Int32Request_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<ssc32py::None_Int32Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ssc32py/None_Int32";
  }

  static const char* value(const ssc32py::None_Int32Request_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<ssc32py::None_Int32Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b3087778e93fcd34cc8d65bc54e850d1";
  }

  static const char* value(const ssc32py::None_Int32Response_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<ssc32py::None_Int32Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ssc32py/None_Int32";
  }

  static const char* value(const ssc32py::None_Int32Response_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // SSC32PY_SERVICE_NONE_INT32_H

